c
@comment
c
@comment
c
@article
c
 @spreadsheet.sheet('Article').row(2)[1]
 @spreadsheet.sheet('Article').row(1)[1]
 @spreadsheet.sheet('Article').row(2)[0]
 @spreadsheet.sheet('Article').row(1)[0]
@article
c
@article
c
open_spreadsheet(params[:file]).sheet('Article').row(index)[0]
c
index
open_spreadsheet(params[:file]).sheet('Article').row(index)[0]
open_spreadsheet(params[:file]).sheet('Article').row(i)[0]
exit
i
open_spreadsheet(params[:file]).sheet('Article').row(i)
open_spreadsheet(params[:file]).sheet('Article')
open_spreadsheet(params[:file]).sheet('Article').row(i)[0]
 @spreadsheet
params
open_spreadsheet
exit
@spreadsheet
c
 open_spreadsheet(params[:file])
params[:file]
params :file
params
spreadsheet
spreadsheet.sheet('Article')
spreadsheet.sheet('Article').row(i)
exit
Article.create(title: spreadsheet.sheet('Article').row(i)[0]) 
params
c
Comment.create(content: "kabayan")
c
Comment.create(content: "kabayan")
c
speadsheet.each_with_pagename do |name| end
speadsheet.each_with_pagename do |comment| end
ods.each_with_pagename do |comment| end
ods.each_with_pagename do |comment|
  p sheet.row(1)
ods.each_with_pagename do |name, sheet|
comment = Comment.new (content: spreadsheet.sheet('comments').row (i)[0], user_id:)
 (2..last_row).each do |i|  spreadsheet.sheet('comments').row(i) end 
 (2..last_row).each do |i| end  spreadsheet.sheet('comments').row(i) 
 spreadsheet.sheet('comments').row(i) 
 spreadsheet.sheet('comments').row(i)
 (2..last_row).each do |i| end
 (2..last_row).each do |i|
 last_row = spreadsheet.last_row
comments = spreadsheet.sheet('comments').last_row
spreadsheet.sheet('comments').row(1)
open_spreadsheet
c
(1..last_row).each do |i| p spreadsheet.sheet('comments').row(i) end
last_row = spreadsheet.last_row
last_row = spreadsheet.last_row (1..last_row).each do |i| p spreadsheet.sheet('comments').row(i) end
last_row = spreadsheet.last_row
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(3) end
spreadsheet.sheet('comments').row(1).each do |sheet| p sheet end
spreadsheet.sheet('comments').row(0).each do |sheet| p sheet end
spreadsheet.sheet('comments').row.each do |sheet| p sheet end
spreadsheet.sheet('comments').rows.each do |sheet| p sheet end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(3) end
spreadsheet.each_with_pagename do |name,sheet| p sheet('comments').row(2) end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(3) end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(2) end
spreadsheet.each_with_pagename do |name,sheet| p sheet.rows end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(2)[0] end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(2)[2] end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(2)[1] end
spreadsheet.sheets.each do |sheet| p sheet end
spreadsheet.sheets.each do |name,sheet| p sheet.row(2) end
spreadsheet.each do |name,sheet| p sheet.row(2) end
spreadsheet.each do |name,sheet| p sheet.row(2)[1] end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(2)[1] end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(2)(1) end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(2) end
spreadsheet.each_with_pagename do |name,sheet| p sheet.row(1) end
spreadsheet.each_comment do |name,sheet| p sheet.row(1) end
spreadsheet.sheet('comments').row(2)
spreadsheet.sheet('comments').each do |column,index| column[index] end
spreadsheet.sheet('comments').each do |column| column end
spreadsheet.sheet('comments').each do |column| column.user_id end
spreadsheet.sheet('comments').each
comments
@article
c
params
c
spreadsheet.sheets
c
xlsx = Roo::Excelx.new(params[:file])
xlsx = Roo::Excelx.new("./new_prices.xlsx")
spreadsheet.sheets
first_sheet
c
 params[:path].present?
 params[:path].nil?
if params[:path].nil?
params
c
params
c
row
c
(2..spreadsheet.last_row).each |data, index| index end
(2..spreadsheet.last_row).each |data, index| data end
2..spreadsheet.last_row |data, index|
2..spreadsheet.last_row
row
c
   endc
   article.save!
   article.attributes = row.to_hash.slice(*accessible_attributes)
   article = find_by_id(row["id"]) |new|
   row = hash[[header, spreadsheet.row(i)].transpose]
(2..spreadsheet.last_row).each do |i|
spreadsheet.row(1)
params
